{"version":3,"sources":["components/card.jsx","components/card-list.jsx","components/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","item","className","src","id","alt","name","email","CardList","props","monsters","map","monster","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","trim","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEaA,EAAO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACpB,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEA,UAAU,WACVC,IAAG,+BAA0BF,EAAKG,GAA/B,aACHC,IAAI,YAEN,sBAAKH,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBD,EAAKK,OAC5B,mBAAGJ,UAAU,YAAb,SAA0BD,EAAKM,eCR1BC,EAAW,SAACC,GACvB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAAwBX,KAAMW,GAAlBA,EAAQR,UCNfS,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEb,UAAU,eACVc,KAAK,OACLF,YAAaA,EACbG,SAAUF,KC8CDG,E,4MAtCbC,MAAQ,CACNT,SAAU,GACVU,YAAa,I,uDAGf,WAAqB,IAAD,OAClBC,MAAM,8CAEHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAG/C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZQ,EAAiBlB,EAASmB,QAAO,SAACjB,GAAD,OACrCA,EAAQN,KAAKwB,cAAcC,SAASX,EAAYU,cAAcE,WAGhE,OACE,sBAAK9B,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,YAAd,+BAEF,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAc,SAACkB,GACb,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,aAK5C,cAAC,EAAD,CAAUzB,SAAUkB,W,GA1CVQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.851f08be.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Card = ({item}) => {\n  return (\n    <div className=\"card\">\n      <img\n        className=\"card-img\"\n        src={`https://robohash.org/${item.id}?set=set2`}\n        alt=\"monster\"\n      />\n      <div className=\"card-info\">\n        <h2 className=\"mb-sm\">{item.name}</h2>\n        <p className=\"paragragh\">{item.email}</p>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n//component\nimport { Card } from \"./card\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key= {monster.id} item={monster} />\n      ))}\n    </div>\n  );\n};\n","\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search-input\"\n      type=\"text\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    ></input>\n  );\n};\n","import { Component } from \"react\";\n\n//component\nimport { CardList } from \"./components/card-list\";\nimport { SearchBox } from \"./components/search-box\";\n\nclass App extends Component {\n  // with constructor\n  // constructor () {\n  //   super();\n  //   this.state = {\n  //     person: [{ name: \"Bill\", age: \"29\" }],\n  //   };\n  // };\n\n  // without constructor\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      //response 回傳為 ReadableStream 物件 -> 使用json方法來取得資料\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase().trim())\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"title\">\n          <h1 className=\"heading-1\">MONSTER ROLODEX</h1>\n        </div>\n        <div className=\"search\">\n          <SearchBox\n            placeholder=\"search monsters\"\n            handleChange={(e) => {\n              this.setState({ searchField: e.target.value });\n            }}\n          ></SearchBox>\n        </div>\n\n        <CardList monsters={filterMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}